// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:

    //Directioning logic
    DMux8Way(in = load, sel = address[6..8], a = lo1, b = lo2, c = lo3, d = lo4, e = lo5, f = lo6, g = lo7, h = lo8);

    RAM64(in = in, load = lo1, address = address[0..5], out = o1);
    RAM64(in = in, load = lo2, address = address[0..5], out = o2);
    RAM64(in = in, load = lo3, address = address[0..5], out = o3);
    RAM64(in = in, load = lo4, address = address[0..5], out = o4);
    RAM64(in = in, load = lo5, address = address[0..5], out = o5);
    RAM64(in = in, load = lo6, address = address[0..5], out = o6);
    RAM64(in = in, load = lo7, address = address[0..5], out = o7);
    RAM64(in = in, load = lo8, address = address[0..5], out = o8);

    Mux8Way16(a = o1, b = o2, c = o3, d = o4, e = o5, f = o6, g = o7, h = o8, sel = address[6..8], out = out);
}