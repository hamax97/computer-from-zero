function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label WHILE_TRUE1
push local 2
if-goto WHILE_CODE1
goto WHILE_FALSE1
label WHILE_CODE1
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push local 0
and
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto TRUE_EXECUTED3
label IF_FALSE3
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label TRUE_EXECUTED3
goto TRUE_EXECUTED2
label IF_FALSE2
push constant 0
pop local 2
label TRUE_EXECUTED2
goto WHILE_TRUE1
label WHILE_FALSE1
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
return
goto TRUE_EXECUTED4
label IF_FALSE4
push argument 0
push constant 2
call Math.multiply 2
return
label TRUE_EXECUTED4
function Main.fillMemory 0
label WHILE_TRUE5
push argument 1
push constant 0
gt
if-goto WHILE_CODE5
goto WHILE_FALSE5
label WHILE_CODE5
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto WHILE_TRUE5
label WHILE_FALSE5
push constant 0
return
